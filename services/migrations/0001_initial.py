# Generated by Django 5.0.9 on 2024-12-07 02:51

import django.db.models.deletion
import modelcluster.fields
import wagtail.contrib.routable_page.models
import wagtail.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("wagtailcore", "0094_alter_page_locale"),
    ]

    operations = [
        migrations.CreateModel(
            name="Division",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                ("url", models.URLField(blank=True, null=True, verbose_name="URL")),
                ("slug", models.SlugField(blank=True, max_length=255, unique=True)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="FunderPolicy",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                ("url", models.URLField(blank=True, null=True, verbose_name="URL")),
                ("slug", models.SlugField(blank=True, max_length=255, unique=True)),
            ],
            options={
                "verbose_name": "Funder Policy",
                "verbose_name_plural": "Funder Policies",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="ResearchLifecyclePhase",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                ("slug", models.SlugField(blank=True, max_length=255, unique=True)),
            ],
            options={
                "verbose_name": "Research Lifecycle Phase",
                "verbose_name_plural": "Research Lifecycle Phases",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="ServiceCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                ("slug", models.SlugField(blank=True, max_length=255, unique=True)),
            ],
            options={
                "verbose_name": "Service Category",
                "verbose_name_plural": "Service Categories",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="ServicePage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "body",
                    wagtail.fields.StreamField(
                        [("paragraph", 0), ("h2", 1), ("h3", 2), ("h4", 3), ("h5", 4)],
                        blank=True,
                        block_lookup={
                            0: ("wagtail.blocks.RichTextBlock", (), {}),
                            1: (
                                "wagtail.blocks.CharBlock",
                                (),
                                {"icon": "title", "template": "base/blocks/h2.html"},
                            ),
                            2: (
                                "wagtail.blocks.CharBlock",
                                (),
                                {"icon": "title", "template": "base/blocks/h3.html"},
                            ),
                            3: (
                                "wagtail.blocks.CharBlock",
                                (),
                                {"icon": "title", "template": "base/blocks/h4.html"},
                            ),
                            4: (
                                "wagtail.blocks.CharBlock",
                                (),
                                {"icon": "title", "template": "base/blocks/h5.html"},
                            ),
                        },
                    ),
                ),
                (
                    "service_url",
                    models.URLField(blank=True, max_length=300, verbose_name="URL"),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="ServicesListingPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "body",
                    wagtail.fields.StreamField(
                        [("paragraph", 0), ("h2", 1), ("h3", 2), ("h4", 3), ("h5", 4)],
                        blank=True,
                        block_lookup={
                            0: ("wagtail.blocks.RichTextBlock", (), {}),
                            1: (
                                "wagtail.blocks.CharBlock",
                                (),
                                {"icon": "title", "template": "base/blocks/h2.html"},
                            ),
                            2: (
                                "wagtail.blocks.CharBlock",
                                (),
                                {"icon": "title", "template": "base/blocks/h3.html"},
                            ),
                            3: (
                                "wagtail.blocks.CharBlock",
                                (),
                                {"icon": "title", "template": "base/blocks/h4.html"},
                            ),
                            4: (
                                "wagtail.blocks.CharBlock",
                                (),
                                {"icon": "title", "template": "base/blocks/h5.html"},
                            ),
                        },
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(
                wagtail.contrib.routable_page.models.RoutablePageMixin,
                "wagtailcore.page",
            ),
        ),
        migrations.CreateModel(
            name="ServiceCategoryAddition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="services.servicecategory",
                    ),
                ),
                (
                    "page",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="service_category_additions",
                        to="services.servicepage",
                    ),
                ),
            ],
            options={
                "verbose_name": "Service Category Addition",
                "verbose_name_plural": "Service Category Additions",
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ResearchLifecyclePhaseAddition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "phase",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="services.researchlifecyclephase",
                    ),
                ),
                (
                    "page",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="research_lifecycle_phase_additions",
                        to="services.servicepage",
                    ),
                ),
            ],
            options={
                "verbose_name": "Research Lifecycle Phase Addition",
                "verbose_name_plural": "Research Lifecycle Phase Additions",
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ServicePageDivisionAddition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "division",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="services.division",
                    ),
                ),
                (
                    "page",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="division_additions",
                        to="services.servicepage",
                    ),
                ),
            ],
            options={
                "verbose_name": "Division Addition",
                "verbose_name_plural": "Division Additions",
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ServicePageFunderPolicyAddition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "funder_policy",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="services.funderpolicy",
                    ),
                ),
                (
                    "page",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="funder_policy_additions",
                        to="services.servicepage",
                    ),
                ),
            ],
            options={
                "verbose_name": "Funder Policy Addition",
                "verbose_name_plural": "Funder Policy Additions",
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
    ]
